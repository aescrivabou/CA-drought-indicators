#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
Created on Sun May  7 18:07:52 2023

@author: alvar
"""

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
from datetime import datetime as dt
import scipy
from scipy.stats import shapiro, norm, skewnorm, gamma
from sklearn.cluster import KMeans
import geopandas as gpd
import mapclassify
import contextily as ctx
from datetime import date, timedelta
import seaborn as sns
from matplotlib.dates import DateFormatter
import matplotlib.dates as mdates
import math
from PIL import Image
from matplotlib import rcParams
from cycler import cycler

#PPIC colors, formats and default parameters for figures
ppic_coltext = '#333333'
ppic_colgrid = '#898989'
ppic_colors = ['#e98426','#649ea5','#0d828a','#776972','#004a80','#3e7aa8','#b44b27','#905a78','#d2aa1d','#73a57a','#4fb3ce']


params = {
   'axes.labelsize': 10,
   'axes.labelweight': "bold",
   'font.size': 10,
   'legend.fontsize': 10,
   'xtick.labelsize': 10,
   'ytick.labelsize': 10,
   'text.usetex': False,
   'font.family': "Arial",
   'text.color' : ppic_coltext,
   'axes.labelcolor' : ppic_coltext,
   'xtick.color' : ppic_coltext,
   'ytick.color': ppic_coltext,
   'grid.color' : ppic_colgrid,
   'figure.figsize': [7, 5],
   'axes.prop_cycle' : cycler(color=ppic_colors)
   }
rcParams.update(params)


#Hydrologic regions
hr = gpd.read_file('../../Data/Input_Data/HRs/i03_Hydrologic_Regions.shp')
hr = pd.concat([hr[1:8],hr[9:12]]).reset_index(drop=True)
hr = hr.to_crs('epsg:4326')

socal = hr.loc[hr.HR_NAME == 'South Coast']

ca = gpd.read_file('../../Data/Input_Data/CA_outline/CA_State_TIGER2016.shp')
ca = ca.to_crs('epsg:4326')

#Data suppliers
data_suppliers = pd.read_csv('../../Data/Input_Data/Exposure&Vulnerability/UrbanSuppliersData.csv')
data_suppliers = gpd.GeoDataFrame(data_suppliers, geometry=gpd.points_from_xy(
    data_suppliers.lon,data_suppliers.lat))
data_suppliers = data_suppliers.set_crs("EPSG:4326")
data_suppliers = data_suppliers.sort_values(by='pop_921', ascending=False).reset_index(drop=True)
data_suppliers['indoor_vul_cat']=np.nan
data_suppliers.loc[data_suppliers.indoor_vulnerable==1, 'indoor_vul_cat']='high'
data_suppliers.loc[data_suppliers.indoor_vulnerable==2, 'indoor_vul_cat']='medium'
data_suppliers.loc[data_suppliers.indoor_vulnerable==3, 'indoor_vul_cat']='low'

socal_suppliers = gpd.sjoin(data_suppliers, socal)


#Map with residential per capita water use
#read shapefile
#To plot them together both projections have to be the same
#Plotting
fig1, ax1 = plt.subplots(figsize = [10,7])
data_suppliers.plot(column = data_suppliers['indoor_vulnerable'], markersize = 0.00035*data_suppliers['pop_921'] , ax = ax1 , alpha = 0.75 , cmap='RdYlGn',  zorder=2) #cmap = 'Spectral_r',
ca.plot(color='lightgrey', ax = ax1, zorder=1)
ax1.axis('Off')
plt.suptitle('Demand vulnerability (indoor use)', fontsize = 14, fontweight='bold')
plt.savefig('demand_vulnarability_ca.png',dpi=600)
#plt.legend()

#Map with residential per capita water use
#read shapefile
#To plot them together both projections have to be the same
#Plotting
fig2, ax2 = plt.subplots(figsize = [10,7])
data_suppliers.plot(column = data_suppliers['Purchase_dependent'], markersize = 0.00035*data_suppliers['pop_921'] , ax = ax2 , alpha = 0.6 , cmap='Set1_r',  zorder=2) #cmap = 'Spectral_r',
ca.plot(color='lightgrey', ax = ax2, zorder=1)
ax2.axis('Off')
plt.suptitle('Purchase or import dependent', fontsize = 14, fontweight='bold')
plt.savefig('purchase_or_import_dep_ca.png',dpi=600)
#plt.legend()

#Map with residential per capita water use
#read shapefile
#To plot them together both projections have to be the same
#Plotting
fig3, ax3 = plt.subplots(figsize = [10,7])
data_suppliers.plot(column = data_suppliers['GW_dependent'], markersize = 0.00035*data_suppliers['pop_921'] , ax = ax3 , alpha = 0.6 , cmap='Set1_r',  zorder=2) #cmap = 'Spectral_r',
ca.plot(color='lightgrey', ax = ax3, zorder=1)
ax3.axis('Off')
plt.suptitle('Groundwater dependent', fontsize = 14, fontweight='bold')
plt.savefig('gw_dep_ca.png',dpi=600)
#plt.legend()

#Map with residential per capita water use
#read shapefile
#To plot them together both projections have to be the same
#Plotting
fig4, ax4 = plt.subplots(figsize = [10,7])
data_suppliers.plot(column = data_suppliers['Surface_dependent'], markersize = 0.00035*data_suppliers['pop_921'] , ax = ax4 , alpha = 0.6 , cmap='Set1_r',  zorder=2) #cmap = 'Spectral_r',
ca.plot(color='lightgrey', ax = ax4, zorder=1)
ax4.axis('Off')
plt.suptitle('Surface water dependent', fontsize = 14, fontweight='bold')
plt.savefig('surface_dep_ca.png',dpi=600)
#plt.legend()
#plt.legend()

#Map with residential per capita water use
#read shapefile
#To plot them together both projections have to be the same
#Plotting
fig14, ax14 = plt.subplots(figsize = [10,7])
data_suppliers.plot(column = data_suppliers['Some_purchase'], markersize = 0.00035*data_suppliers['pop_921'] , ax = ax14 , alpha = 0.6 , cmap='Set1_r',  zorder=2) #cmap = 'Spectral_r',
ca.plot(color='lightgrey', ax = ax14, zorder=1)
ax14.axis('Off')
plt.suptitle('Agencies that purchased water', fontsize = 14, fontweight='bold')
plt.savefig('water_trading_ca.png',dpi=600)
#plt.legend()
#plt.legend()



#Map with residential per capita water use
#read shapefile
#To plot them together both projections have to be the same
#Plotting
fig5, ax5 = plt.subplots(figsize = [10,7])
socal_suppliers.plot(column = socal_suppliers['indoor_vulnerable'], markersize = 0.00075*socal_suppliers['pop_921'] , ax = ax5 , alpha = 0.75 , cmap='RdYlGn',  zorder=2) #cmap = 'Spectral_r',
socal.plot(color='lightgrey', ax = ax5, zorder=1)
ax5.axis('Off')
plt.suptitle('Demand vulnerability (indoor use)', fontsize = 14, fontweight='bold')
plt.savefig('demand_vulnarability_socal.png',dpi=600)
#plt.legend()

#Map with residential per capita water use
#read shapefile
#To plot them together both projections have to be the same
#Plotting
fig6, ax6 = plt.subplots(figsize = [10,7])
socal_suppliers.plot(column = socal_suppliers['Purchase_dependent'], markersize = 0.00075*socal_suppliers['pop_921'] , ax = ax6 , alpha = 0.6 , cmap='Set1_r',  zorder=2) #cmap = 'Spectral_r',
socal.plot(color='lightgrey', ax = ax6, zorder=1)
ax6.axis('Off')
plt.suptitle('Purchase or import dependent', fontsize = 14, fontweight='bold')
plt.savefig('purchase_or_import_dep_socal.png',dpi=600)
#plt.legend()

#Map with residential per capita water use
#read shapefile
#To plot them together both projections have to be the same
#Plotting
fig7, ax7 = plt.subplots(figsize = [10,7])
socal_suppliers.plot(column = socal_suppliers['GW_dependent'], markersize = 0.00075*socal_suppliers['pop_921'] , ax = ax7 , alpha = 0.6 , cmap='Set1_r',  zorder=2) #cmap = 'Spectral_r',
socal.plot(color='lightgrey', ax = ax7, zorder=1)
ax7.axis('Off')
plt.suptitle('Groundwater dependent', fontsize = 14, fontweight='bold')
plt.savefig('gw_dep_socal.png',dpi=600)
#plt.legend()



